---
import '../styles/global.css';
import ThemeToggle from '../components/ThemeToggle.astro';

export interface Props {
  title: string;
  description?: string;
  image?: string;
  type?: 'website' | 'article';
  publishDate?: Date;
  author?: string;
  keywords?: string[];
}

const { 
  title, 
  description = "Bhuvan's personal blog - Long-form writing and quick updates", 
  image, 
  type = 'website',
  publishDate,
  author = 'Bhuvan',
  keywords = []
} = Astro.props;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const defaultImage = image || '/profile-pic.webp';
const fullImageUrl = new URL(defaultImage, Astro.site);
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Performance Optimizations -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link rel="preload" as="style" onload="this.onload=null;this.rel='stylesheet'" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap" />
    <noscript><link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap" /></noscript>
    
    <!-- SEO Meta Tags -->
    <meta name="author" content={author} />
    <meta name="robots" content="index, follow" />
    <meta name="googlebot" content="index, follow" />
    {keywords.length > 0 && <meta name="keywords" content={keywords.join(', ')} />}
    
    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} />
    
    <!-- RSS Feed -->
    <link rel="alternate" type="application/rss+xml" title="Bhuvan" href="/rss.xml" />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={type} />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={fullImageUrl} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:site_name" content="Bhuvan's Blog" />
    <meta property="og:locale" content="en_US" />
    {publishDate && <meta property="article:published_time" content={publishDate.toISOString()} />}
    {author && <meta property="article:author" content={author} />}
    
    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:url" content={Astro.url} />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={fullImageUrl} />
    <meta name="twitter:creator" content="@bhuvanesh2007" />
    <meta name="twitter:site" content="@bhuvanesh2007" />
    
    <!-- JSON-LD Structured Data -->
    <script type="application/ld+json" set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": type === 'article' ? "BlogPosting" : "WebSite",
      "@id": canonicalURL,
      "url": canonicalURL,
      "name": title,
      "headline": title,
      "description": description,
      "image": fullImageUrl,
      "author": {
        "@type": "Person",
        "name": author,
        "url": "https://bebhuvan.com/about"
      },
      ...(type === 'article' && publishDate ? {
        "datePublished": publishDate.toISOString(),
        "dateModified": publishDate.toISOString(),
        "mainEntityOfPage": {
          "@type": "WebPage",
          "@id": canonicalURL
        },
        "publisher": {
          "@type": "Person",
          "name": author,
          "url": "https://bebhuvan.com"
        }
      } : {
        "url": "https://bebhuvan.com",
        "potentialAction": {
          "@type": "SearchAction",
          "target": "https://bebhuvan.com/search?q={search_term_string}",
          "query-input": "required name=search_term_string"
        }
      })
    })} />
    
    <title>{title}</title>
    <script is:inline>
      // Prevent flash of unstyled content
      const theme = (() => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          return 'dark';
        }
        return 'light';
      })();
      
      if (theme === 'dark') {
        document.documentElement.setAttribute('data-theme', 'dark');
      }
    </script>
  </head>
  <body>
    <ThemeToggle />
    <slot />
  </body>
</html>